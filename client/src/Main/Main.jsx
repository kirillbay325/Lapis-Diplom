import React, { useState, useEffect } from 'react';
import './Main.css';
import './–°ategories.css';
import { Link, useNavigate } from 'react-router-dom';
import axios from "axios";

function Main() {
  const [counts, setCounts] = useState({
    –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ: 0,
    –î–∏–∑–∞–π–Ω: 0,
    –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥: 0,
    –ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥: 0,
  });
  const API_URL = 'http://localhost:8000';
  const navigate = useNavigate();
  const [searchQuery, setSearchQuery] = useState('');
  const handleSearch = async (e) => {
    e.preventDefault();
    if (!searchQuery.trim()) return;

    try {
      const response = await axios.get(`${API_URL}/services`);
      const services = response.data;

      const foundService = services.find(service =>
        service.service_title.toLowerCase().includes(searchQuery.toLowerCase())
      );

      if (foundService) {
        navigate('/Full_Services', { state: { service: foundService } });
      } else {
        alert("–£—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
      }
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:", err);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫");
    }
  };

  useEffect(() => {
    fetch('http://localhost:8000/services/categories')
      .then((res) => res.json())
      .then((data) => {
        const categories = data.categories || [];

        const newCounts = { ...counts };

        categories.forEach((category) => {
          if (category === '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ') newCounts.–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ += 1;
          if (category === '–î–∏–∑–∞–π–Ω') newCounts.–î–∏–∑–∞–π–Ω += 1;
          if (category === '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥') newCounts.–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ += 1;
          if (category === '–ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥') newCounts.–ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥ += 1;
        });

        setCounts(newCounts);
      })
      .catch((err) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', err);
      });
  }, []);

  const formatNumber = (num) => num.toLocaleString();

  return (
    <>
      <div className="main">
        <h1 className="main-title">
          –ù–∞–π–¥–∏—Ç–µ <span className="perfect-text">–∏–¥–µ–∞–ª—å–Ω–æ–≥–æ</span> —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
        </h1>

        <h3 className="main-subtitle">
          –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
        </h3>

        <div className="search-container">
            <div className="search-bar">
              <form onSubmit={handleSearch} className="search-form">
                <input
                  type="search"
                  className="search-input"
                  placeholder="–ù–∞–π—Ç–∏ —É—Å–ª—É–≥–∏, —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤..."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                />
                <button type="submit" className="search-btn">–ü–æ–∏—Å–∫</button>
              </form>
            </div>
          </div>
      </div>
      

      <div className="categories-main">
        <h1 className="categories-title">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</h1>

        <div className="categories-container">
          <Link
            to="/ServicesList"
            state={{ category: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ" }}
            className="category-item-link"
          >
            <div className="category-item">
              <div className="category-icon">üíª</div>
              <p className="category-name">–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ</p>
              <p className="category-quantity">{formatNumber(counts.–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ)} —É—Å–ª—É–≥</p>
            </div>
          </Link>

          <Link
              to="/ServicesList"
              state={{ category: "–î–∏–∑–∞–π–Ω" }}
              className="category-item-link"
            >
              <div className="category-item">
                <div className="category-icon">üé®</div>
                <p className="category-name">–î–∏–∑–∞–π–Ω</p>
                <p className="category-quantity">{formatNumber(counts.–î–∏–∑–∞–π–Ω)} —É—Å–ª—É–≥</p>
              </div>
            </Link>

            <Link
              to="/ServicesList"
              state={{ category: "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥" }}
              className="category-item-link"
            >
              <div className="category-item">
                <div className="category-icon">üìà</div>
                <p className="category-name">–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥</p>
                <p className="category-quantity">{formatNumber(counts.–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥)} —É—Å–ª—É–≥</p>
              </div>
            </Link>

            <Link
              to="/ServicesList"
              state={{ category: "–ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥" }}
              className="category-item-link"
            >
              <div className="category-item">
                <div className="category-icon">‚úçÔ∏è</div>
                <p className="category-name">–ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥</p>
                <p className="category-quantity">{formatNumber(counts.–ö–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥)} —É—Å–ª—É–≥</p>
              </div>
            </Link>

        </div>
      </div>
    </>
  );
}

export default Main;